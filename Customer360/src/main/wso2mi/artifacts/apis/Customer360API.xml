<api xmlns="http://ws.apache.org/ns/synapse" name="Customer360API" context="/customer360">
    <resource methods="GET" uri-template="/{customerId}">
        <inSequence>
            <variable name="customerId" expression="${params.pathParams.customerId}" type="STRING"/>
            
            <!-- Use scatter-gather to call all three systems in parallel -->
            <scatter-gather parallel-execution="true" target="Body" result-content-type="JSON">
                <aggregation expression="${payload}"/>
                
                <!-- CRM System Call -->
                <sequence>
                    <http.get configKey="CRMConnection">
                        <relativePath>/customers/${vars.customerId}</relativePath>
                        <headers>[]</headers>
                        <forceScAccepted>false</forceScAccepted>
                        <disableChunking>false</disableChunking>
                        <forceHttp10>false</forceHttp10>
                        <noKeepAlive>false</noKeepAlive>
                        <forcePostPutNobody>false</forcePostPutNobody>
                        <forceHttpContentLength>false</forceHttpContentLength>
                    </http.get>
                    <payloadFactory media-type="json">
                        <format>
                            {
                            "source": "CRM",
                            "data": ${payload}
                            }
                        </format>
                    </payloadFactory>
                </sequence>
                
                <!-- Support System Call -->
                <sequence>
                    <http.get configKey="SupportConnection">
                        <relativePath>/tickets?customerId=${vars.customerId}</relativePath>
                        <headers>[]</headers>
                        <forceScAccepted>false</forceScAccepted>
                        <disableChunking>false</disableChunking>
                        <forceHttp10>false</forceHttp10>
                        <noKeepAlive>false</noKeepAlive>
                        <forcePostPutNobody>false</forcePostPutNobody>
                        <forceHttpContentLength>false</forceHttpContentLength>
                    </http.get>
                    <payloadFactory media-type="json">
                        <format>
                            {
                            "source": "Support",
                            "data": ${payload}
                            }
                        </format>
                    </payloadFactory>
                </sequence>
                
                <!-- Orders System Call using direct database connection -->
                <sequence>
                    <!-- Initialize variables with default values -->
                    <variable name="orderData" type="JSON" value="[]"/>
                    <dblookup>
                        <connection>
                            <pool>
                                <driver>org.postgresql.Driver</driver>
                                <url>jdbc:postgresql://localhost:5432/orders_db</url>
                                <user>demo</user>
                                <password>demo</password>
                                <property name="validationquery" value=""/>
                            </pool>
                        </connection>
                        <statement>
                            <sql><![CDATA[SELECT customer_id, name, order_id, product, amount, order_date FROM customer_orders WHERE customer_id = ?;]]></sql>
                            <parameter expression="${vars.customerId}" type="INTEGER"/>
                            <result column="customer_id" name="customer_id"/>
                            <result column="name" name="name"/>
                            <result column="order_id" name="order_id"/>
                            <result column="product" name="product"/>
                            <result column="amount" name="amount"/>
                            <result column="order_date" name="order_date"/>
                        </statement>
                    </dblookup>
                    <payloadFactory media-type="json" template-type="default">
                        <format>
                            {
                                "source": "Orders",
                                "order": {
                                    "customer_id": "$1",
                                    "name": "$2",
                                    "order_id": "$3",
                                    "product": "$4",
                                    "amount": "$5",
                                    "order_date": "$6"
                                }
                            }
                        </format>
                        <args>
                            <arg expression="get-property('customer_id')"/>
                            <arg expression="get-property('name')"/>
                            <arg expression="get-property('order_id')"/>
                            <arg expression="get-property('product')"/>
                            <arg expression="get-property('amount')"/>
                            <arg expression="get-property('order_date')"/>
                        </args>
                    </payloadFactory>
                </sequence>
            </scatter-gather>
            
            <sequence key="FormatCustomer360Response"/>
            <respond/>
        </inSequence>
        <faultSequence>
            <log category="ERROR">
                <message>Error in Customer360 API: ${props.synapse.ERROR_MESSAGE}</message>
            </log>
            <sequence key="HandleErrorResponse"/>
            <respond/>
        </faultSequence>
    </resource>
</api>
